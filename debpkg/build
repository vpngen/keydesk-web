#!/bin/sh

export SHARED_BASE="/data"

constract_version () {
        repo_path=$1

        # Get the last semver tag
        l_tag=$(git -C "$repo_path" tag --list --sort=-v:refname 'v[0-9]*\.[0-9]*\.[0-9]*' | head -n 1)

        # Check if the tag exists
        if [ -z "$l_tag" ]; then
          echo "No semver tag found in this repository."
          exit 1
        fi

        # Check if the tagged commit is in the current branch
        # BRANCH=$(git branch --show-current)
        if ! git -C "$repo_path" branch --contains "$l_tag" | grep -E -q "^(\* )?$BRANCH"; then
          echo "The last semver tagged commit ($l_tag) is not in the current branch ($BRANCH)."
          exit 1
        fi

        # Check that no code diff between tagged commit and last commit in this branch
        if ! git -C "$repo_path" diff --exit-code "$l_tag" HEAD; then
          echo "There is a code difference between the last semver tagged commit ($l_tag) and the last commit in this branch ($BRANCH)."
          exit 1
        else
          echo "No code difference between the last semver tagged commit ($l_tag) and the last commit in this branch ($BRANCH)."
        fi

        # Export the new version
        export PACKAGE_VERSION="${l_tag}-${BRANCH}"        

        # File to store the execution count for each input value.
        history_file="$SHARED_BASE/history.txt"

        # Extract the execution count for the input value from the history file, defaulting to 0
        count=$(grep -oE "^$l_tag [0-9]+" "$history_file" | awk '{print $2}')
        count=${count:-0}

        # Increment the count and write the updated history line to the file
        new_count=$((count + 1))
        sed -i "s/^$l_tag [0-9]\+/$l_tag $new_count/" "$history_file"

        export PACKAGE_RELEASE="${new_count}" 
}



if [ "x$1" = "xpkg" ]; then
        set -e

        export USER_UID=${USER_UID}
        export BRANCH=${BRANCH}

        ssh-keyscan -t rsa github.com >> /etc/ssh/ssh_known_hosts
        git config --global url."ssh://git@github.com/".insteadOf "https://github.com/"

        git clone ssh://git@github.com/vpngen/keydesk-web
        if [ "x" != "x${BRANCH}" ]; then
                git -C keydesk-web checkout ${BRANCH}
        fi

        constract_version "keydesk-web"

        keydesk-web/debpkg/src/build.sh

        exit 0
fi

# Get the current branch
BRANCH=$(git branch --show-current)

docker run --rm  \
        -v $(readlink -f $SSH_AUTH_SOCK):/ssh-agent \
        -e SSH_AUTH_SOCK=/ssh-agent \
        -e USER_UID=$(id -u) \
        -e BRANCH=${BRANCH} \
        -v ${PWD}:"${SHARED_BASE}" \
        node:18-buster "${SHARED_BASE}/build" pkg
