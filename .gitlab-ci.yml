---
variables:
  LAB_DOCKER_REPO_URL: cr.yandex/crpdf84avma12003tuqc
  PROJECT_NAMESPACE: "vpn-gen"
  IMAGE_NAME: "${LAB_DOCKER_REPO_URL}/${PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
  DOCKER_REGISTRY_TOKEN: ${YC_TOKEN_DEV}
#  YC_TOKEN: ${YC_TOKEN_DEV}
#  AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID_DEV}
#  AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY_DEV}
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

image: cr.yandex/crprnotkh7r44umnfrio/docker:20-dind
services:
  - name: cr.yandex/crprnotkh7r44umnfrio/docker:20-dind
    alias: docker
    command: ["--tls=false"]

stages:
  - build
  - test
  - deploy
  - release

before_script:
  - apk --update add openssh-client bash apache2-utils
  - eval $(ssh-agent -s)
  - bash -c "ssh-add <(echo '$SSH_DEPLOY_KEY_DEV')"
  - mkdir -p ~/.ssh
  - ssh-keyscan -t rsa ${HOSTNAME} >> ~/.ssh/known_hosts

build_app:
  stage: build
  before_script:
    - echo build app...
  script:
    - docker login --username oauth --password ${DOCKER_REGISTRY_TOKEN} cr.yandex
    - >
      if [ -z ${CI_COMMIT_TAG} ]; then
        export IMAGE_TAG=${CI_PIPELINE_ID}
      else
        export IMAGE_TAG=${CI_COMMIT_TAG}
      fi
    - echo "tag = $IMAGE_TAG"
    - >
      docker build --no-cache -t ${IMAGE_NAME}:${IMAGE_TAG} \
                   --build-arg ${PROJECT_NAMESPACE} \
                   --build-arg ${CI_PROJECT_NAME} \
                   --build-arg ${IMAGE_TAG} \
                   -f Dockerfile .
    - docker push ${IMAGE_NAME}:${IMAGE_TAG}
    - docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest
    - docker push ${IMAGE_NAME}:latest
  tags:
    - dev
    - docker
    - shared

deploy_stage:
  stage: deploy
  variables:
      HOSTNAME: "vpn01-gen-stg01.dev.beeonline.pro"
  image:
    name: cr.yandex/crprnotkh7r44umnfrio/docker/compose:alpine-1.29.2
    entrypoint: [""]
  script:
    - >
      if [ -z ${CI_COMMIT_TAG} ]; then
        export IMAGE_TAG=${CI_PIPELINE_ID}
      else
        export IMAGE_TAG=${CI_COMMIT_TAG}
      fi
    - export DOCKER_HOST="ssh://deployment.automation@${HOSTNAME}"
    - docker login --username oauth --password ${DOCKER_REGISTRY_TOKEN} cr.yandex
    - export DOCKER_IMAGE_PREF=${IMAGE_NAME}
    - export DOCKER_IMAGE_VER=${IMAGE_TAG}
    - docker-compose -f compose/stage.yml up -d
  tags:
    - dev
    - docker
    - shared
#   allow_failure: false
#   when: manual
#   only:
#     - tags
